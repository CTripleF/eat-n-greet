{"version":3,"sources":["utils/mutations.js","components/SignupForm.js","components/LoginForm.js","utils/queries.js","components/MeetupsList.js","components/Home.js","components/CreateMeetup.js","components/AppNavbar.js","components/EditMeetupForm.js","components/SingleMeetup.js","App.js","index.js","utils/auth.js"],"names":["LOGIN_USER","gql","ADD_USER","ADD_MEETUPS","EDIT_MEETUPS","DELETE_MEETUPS","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","error","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","token","console","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","MEETUPS","SINGLE_MEETUP","MeetupList","meetups","length","map","meetup","key","_id","className","createdAt","to","title","Home","useQuery","loading","log","MeetupsList","CreateMeetup","require","setTitle","body","setBody","loggedIn","getToken","isPending","setIsPending","history","useHistory","refetchQueries","addMeetup","handleSubmit","e","push","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","Toggle","aria-controls","Collapse","id","Nav","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","handleModalClose","EditMeetupForm","closeModal","editFormData","setEditFormData","editMeetup","handleMeetupChange","handleEditSubmit","defaultValue","SingleMeetup","meetupID","useParams","me","deleteMeetup","handleDeleteMeetup","Error","httpLink","createHttpLink","uri","authLink","setContext","_","headers","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","AuthService","decode","this","isTokenExpired","exp","Date","now","err","idToken","setItem","window","location","assign","removeItem"],"mappings":"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","file":"static/js/main.b5ee857e.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      username\n    }\n  }\n}\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $password: String!, $email: String!) {\n    addUser(username: $username, password: $password, email: $email) {\n      token\n      user {\n        username\n        _id\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_MEETUPS = gql`\nmutation addMeetup($body: String!, $title: String!) {\n  addMeetup(body: $body, title: $title) {\n    _id\n    body\n    createdAt\n    username\n    title\n  }\n}\n`;\n\nexport const EDIT_MEETUPS = gql`\nmutation editMeetup($id: ID!, $body: String!, $title: String!) {\n  editMeetup(_id: $id, body: $body, title: $title) {\n    _id\n    title\n    body\n  }\n}\n`;\n\nexport const DELETE_MEETUPS = gql`\nmutation deleteMeetup($id: ID!) {\n  deleteMeetup(_id: $id) {\n    _id\n    username\n    email\n  }\n}\n`;","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\n\n\n\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst SignupForm = () => {\n    // set initial form state\n    const [userFormData, setUserFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n    });\n    // set state for form validation\n    const [validated] = useState(false);\n    // set state for alert\n    const [showAlert, setShowAlert] = useState(false);\n\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const { data } = await addUser({\n                variables: { ...userFormData },\n            });\n            Auth.login(data.addUser.token);\n        } catch (err) {\n            console.error(error);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: \"\",\n            email: \"\",\n            password: \"\",\n        });\n    };\n\n    return (\n        <>\n            {/* This is needed for the validation functionality above */}\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n                {/* show alert if server response is bad */}\n                <Alert\n                    dismissible\n                    onClose={() => setShowAlert(false)}\n                    show={showAlert}\n                    variant=\"danger\"\n                >\n                    Something went wrong with your signup!\n                </Alert>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Your username\"\n                        name=\"username\"\n                        onChange={handleInputChange}\n                        value={userFormData.username}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Username is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Your email address\"\n                        name=\"email\"\n                        onChange={handleInputChange}\n                        value={userFormData.email}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Email is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Your password\"\n                        name=\"password\"\n                        onChange={handleInputChange}\n                        value={userFormData.password}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Password is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Button\n                    disabled={\n                        !(\n                            userFormData.username &&\n                            userFormData.email &&\n                            userFormData.password\n                        )\n                    }\n                    type=\"submit\"\n                    variant=\"success\"\n                >\n                    Submit\n                </Button>\n            </Form>\n        </>\n    );\n};\n\nexport default SignupForm;","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n\n// import { loginUser } from '../utils/API';\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n    const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n    const [login, { error }] = useMutation(LOGIN_USER);\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        try {\n            const { data } = await login({\n                variables: { ...userFormData },\n            });\n            Auth.login(data.login.token);\n        } catch (err) {\n            console.error(error);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: \"\",\n            email: \"\",\n            password: \"\",\n        });\n    };\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n                <Alert\n                    dismissible\n                    onClose={() => setShowAlert(false)}\n                    show={showAlert}\n                    variant=\"danger\"\n                >\n                    Something went wrong with your login credentials!\n                </Alert>\n                <Form.Group>\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Your email\"\n                        name=\"email\"\n                        onChange={handleInputChange}\n                        value={userFormData.email}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Email is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Your password\"\n                        name=\"password\"\n                        onChange={handleInputChange}\n                        value={userFormData.password}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Password is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Button\n                    disabled={!(userFormData.email && userFormData.password)}\n                    type=\"submit\"\n                    variant=\"success\"\n                >\n                    Submit\n                </Button>\n            </Form>\n        </>\n    );\n};\n\nexport default LoginForm;","import { gql } from \"@apollo/client\";\n\nexport const GET_ME = gql`\n  {\n    me {\n        _id\n      username\n    }\n  }\n`;\n\nexport const MEETUPS = gql`\nquery meetups($username: String) {\n  meetups(username: $username) {\n    _id\n    body\n    createdAt\n    username\n    title\n  }\n}\n`;\n\nexport const SINGLE_MEETUP = gql`\nquery Meetup($id: ID!) {\n  meetup(_id: $id) {\n    _id\n    body\n    createdAt\n    username\n    title\n  }\n}\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MeetupList = ({ meetups }) => {\n    if (!meetups.length) {\n        return <h3>No Meets Yet</h3>;\n    }\n    return (\n        <div>\n            {meetups &&\n                meetups.map(meetup => (\n                    <div key={meetup._id} className=\"card mb-3\">\n                        <p className=\"card-header\">\n                            {meetup.username}\n                            <br/>\n                            {meetup.createdAt}\n                        </p>\n                        <div className=\"card-body\">\n                            <Link to={`/meetup/${meetup._id}`}>\n                                <p>{meetup.title}</p>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nexport default MeetupList;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { MEETUPS } from '../utils/queries';\nimport MeetupsList from './MeetupsList';\n\nconst Home = () => {\n    const { loading, data } = useQuery(MEETUPS);\n    const meetups = data?.meetups || [];\n    console.log(meetups);\n\n    return (\n        <main>\n            <div>\n                {loading ? (\n                    <div>Loading...</div>\n                ) : (\n                    <MeetupsList meetups={meetups} title=\"meetups...\" />\n                )}\n            </div>\n        </main>\n    )\n};\n\nexport default Home;","import React, { useState } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport { ADD_MEETUPS } from '../utils/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport Home from './Home'\n\nconst auth = require('../utils/auth');\n\n\nconst CreateMeetup = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [username, setUsername] = useState('');\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    // const [loadingStatus, setLoadingStatus] = useState(null);\n    // add image\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const [addMeetup, { error }] = useMutation(ADD_MEETUPS, {\n\n        refetchQueries: [\n            \"meetups\"\n        ],\n    })\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        setIsPending(true);\n\n        await addMeetup({\n            variables: {\n                title: title,\n                body: body,\n                username: username\n            }\n        })\n\n        history.push('/');\n        console.log(error);\n    }\n\n    if (!token) {\n        return (<Home />)\n    } else {\n    return (\n        <div className=\"create\">\n            <h2>Add a New Meetup</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Meetup Title</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <label>Meetup Body:</label>\n                <textarea\n                    required\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                />\n                {/* <label>Meetup Author:</label> */}\n                {/* <textarea \n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                /> */}\n                {!isPending && <button>Add Meetup</button>}\n                {isPending && <button disabled>Adding Meetup</button>}\n            </form>\n        </div>\n    );\n    }\n}\n// add form reset once data has been entered\n// if failed/successful routes\nexport default CreateMeetup;","import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport CreateMeetup from './CreateMeetup';\nimport { useMutation } from '@apollo/client';\n\nconst AppNavbar = () => {\n    const [showModal, setShowModal] = useState(false);\n    return (\n        <>\n            <Navbar bg='dark' variant='dark' expand='lg'>\n                <Container fluid>\n                    <Navbar.Brand as={Link} to='/'>\n                        Eat N' Greet\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls='navbar' />\n                    <Navbar.Collapse id='navbar'>\n                        <Nav className='ml-auto'>\n                            <Nav.Link as={Link} to='/'>\n                                Meetups\n                            </Nav.Link>\n                            {Auth.loggedIn() ? (\n                                <>\n                                    <Nav.Link as={Link} to='/create'>\n                                        Create Meetup\n                                    </Nav.Link>\n                                    <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                                </>\n                            ) : (\n                                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            <Modal\n                size='lg'\n                show={showModal}\n                onHide={() => setShowModal(false)}\n                aria-labelledby='signup-modal'>\n                <Tab.Container defaultActiveKey='login'>\n                    <Modal.Header closeButton>\n                        <Modal.Title id='signup-modal'>\n                            <Nav variant='pills'>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='login'>Login</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Tab.Content>\n                            <Tab.Pane eventKey='login'>\n                                <LoginForm handleModalClose={() => setShowModal(false)} />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey='signup'>\n                                <SignUpForm handleModalClose={() => setShowModal(false)} />\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Modal.Body>\n                </Tab.Container>\n            </Modal>\n        </>\n    );\n}\nexport default AppNavbar;","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { EDIT_MEETUPS } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { SINGLE_MEETUP } from \"../utils/queries\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { Modal } from 'react-bootstrap';\nimport SingleMeetup from \"./SingleMeetup\";\n\nconst EditMeetupForm = ({ meetup, closeModal }) => {\n    // const {id: meetupID, body: meetupBody, title:meetupTitle } = useParams();\n    // console.log({meetupID});\n\n    // const { loading, data } = useQuery(SINGLE_MEETUP, {\n    //     variables: {id: meetupID,  body: meetupBody, title:meetupTitle},\n    // });\n    console.log(meetup);\n    const [editFormData, setEditFormData] = useState({\n        // id: meetup._id,\n        title: meetup.title,\n        body: meetup.body,\n    });\n    console.log(editFormData);\n    const [validated] = useState(false);\n    // set state for alert\n    const [showAlert, setShowAlert] = useState(false);\n\n    const [editMeetup, { error }] = useMutation(EDIT_MEETUPS);\n\n    const handleMeetupChange = (event) => {\n        const { name, value } = event.target;\n        setEditFormData({ ...editFormData, [name]: value });\n    };\n\n\n\n    const handleEditSubmit = async (event) => {\n        event.preventDefault();\n\n\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            await editMeetup({\n                variables: {\n                    id: meetup._id,\n                    body: editFormData.body,\n                    title: editFormData.title\n                },\n            });\n        } catch (err) {\n            console.error(error);\n            setShowAlert(true);\n        }\n    };\n\n    return (\n        <>\n            {/* This is needed for the validation functionality above */}\n            <Form noValidate validated={validated} onSubmit={handleEditSubmit}>\n                {/* show alert if server response is bad */}\n                <Alert\n                    dismissible\n                    onClose={() => setShowAlert(false)}\n                    show={showAlert}\n                    variant=\"danger\"\n                >\n                    Something went wrong with your meetup!\n                </Alert>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"username\">Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"\"\n                        name=\"title\"\n                        onChange={handleMeetupChange}\n                        defaultValue={meetup.title}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Title is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label htmlFor=\"email\">Body</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"\"\n                        name=\"body\"\n                        onChange={handleMeetupChange}\n                        defaultValue={meetup.body}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Body is required!\n                    </Form.Control.Feedback>\n                </Form.Group>\n                {/* <Button onClick={() => setShowModal(false)}\n                    disabled={\n                        !editFormData\n                    }\n                    type=\"submit\"\n                    variant=\"success\"\n                >\n                    Submit\n                </Button> */}\n                <button onClick={() => closeModal(false)}>Submit</button>\n            </Form>\n            {/* <Modal show={showModal} onHide={() => setShowModal(true)}>\n                <SingleMeetup />\n            </Modal> */}\n        </>\n    );\n}\n\nexport default EditMeetupForm;","import React, {useState} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\n// import ReactionList from '../components/ReactionList';\n// import ReactionForm from '../components/ReactionForm';\n\nimport Auth from '../utils/auth';\nimport { useQuery, useMutation, } from '@apollo/client';\nimport { SINGLE_MEETUP } from '../utils/queries';\nimport { DELETE_MEETUPS } from '../utils/mutations';\nimport EditMeetupForm from './EditMeetupForm';\nimport { Modal } from 'react-bootstrap';\n\n\n\nconst SingleMeetup = () => {\n    const {id: meetupID } = useParams();\n    console.log({meetupID});\n    const { loading, data } = useQuery(SINGLE_MEETUP, {\n        variables: {id: meetupID },\n    });\n\n    // const {loading, data} = useQuery(MEETUPS);\n    // const meetups = data?.meetups || [];\n    const [isPending, setIsPending] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n\n\n\n    const meetup = data?.meetup || {};\n    console.log({meetup});\n    const userData = data?.me || [];\n    const history = useHistory();\n\n    const [deleteMeetup, { error }] = useMutation(DELETE_MEETUPS, {\n        refetchQueries: [\n            'meetups'\n        ],\n    })\n\n    const handleDeleteMeetup = async () => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        if (!token) {\n            return false;\n        }\n        try {\n            const response = await deleteMeetup({\n                variables: { id: meetupID },\n            });\n\n            if (!response) {\n                throw new Error(\"something went wrong!\");\n            }\n            // removeMeetupId(meetupId);\n        } catch (err) {\n            console.error(error);\n        }\n    history.push('/');\n    };\n\n\n    return (\n        <div className=\"blog-details\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            <article >\n                <h2>{meetup.title}</h2>\n                <p>Written by {meetup.username}</p>\n                <div>{meetup.body}</div>\n                <button onClick={() => setShowModal(true)}>Edit</button>\n                <button onClick={() => handleDeleteMeetup(meetup.meetupID)}>Delete</button>\n            </article>\n            <Modal show={showModal}>\n                <EditMeetupForm meetup={meetup} closeModal={setShowModal}/>\n            </Modal>\n        </div>\n    );\n};\nexport default SingleMeetup;\n\n\n\n// <Modal show={showModal} onHide={() => setShowModal(false)}>\n// <EditMeetupForm meetup={meetup} closeModal={setOpenModal}/>\n// </Modal>}\n\n    // const [ID] = useState('');\n    // const [isPending, setIsPending] = useState(false);\n\n\n    // \n\n    // const handleClick = () => {\n    //     fetch('/meetups/' + Posts.id, {\n    //         method: 'DELETE'\n    //     }).then(() => {\n    //         history.push('/');\n    //     })\n    // }\n\n","import AppNavbar from './components/AppNavbar';\nimport Home from './components/Home';\nimport CreateMeetup from './components/CreateMeetup';\nimport SingleMeetup from './components/SingleMeetup';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport SignupForm from './components/SignupForm';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"\">\n          <AppNavbar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/create\" component={CreateMeetup}/>\n              <Route exact path=\"/meetup/:id\" component={SingleMeetup}/>\n              <Route path=\"/signup\">\n                <SignupForm />\n              </Route>\n              <Route path=\"*\">\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider >\n  );\n};\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();\n"],"sourceRoot":""}